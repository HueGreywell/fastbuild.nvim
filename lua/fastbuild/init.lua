local cache_dir = vim.fn.stdpath("cache")
local cache_file = cache_dir .. "/fastbuild_plugins.lua"

local M = {}

local function table_contains_plugin(plugins, dir)
  for _, plugin in ipairs(plugins) do
    if plugin.dir == dir then
      return true
    end
  end
  return false
end

function M.create_plugin_entry()
  local cwd = vim.fn.getcwd()
  local plugin_name = vim.fn.fnamemodify(cwd, ":t"):gsub("%.nvim", "")
  local plugin_entry_path = cwd .. "/lua/" .. plugin_name .. "/fastbuild.lua"

  if vim.fn.filereadable(plugin_entry_path) ~= 1 then
    return nil
  end

  local module_path = plugin_name .. ".fastbuild"

  return {
    dir = cwd,
    config = function()
      require(module_path).setup()
    end,
  }
end

function M.save_plugin()
  local plugin_entry = M.create_plugin_entry()

  if not plugin_entry then
    vim.notify("FastBuild: No fastbuild.lua found in this plugin.", vim.log.levels.WARN)
    return
  end

  local plugins = {}

  if vim.fn.filereadable(cache_file) == 1 then
    local ok, loaded_plugins = pcall(dofile, cache_file)
    if ok and type(loaded_plugins) == "table" then
      plugins = loaded_plugins
    end
  end

  if table_contains_plugin(plugins, plugin_entry.dir) then
    vim.notify("FastBuild: Plugin already exists in cache.", vim.log.levels.INFO)
    return
  end

  table.insert(plugins, plugin_entry)

  local ok, write_file = pcall(io.open, cache_file, "w")
  if not ok or not write_file then
    vim.notify("FastBuild: Failed to open cache file for writing.", vim.log.levels.ERROR)
    return
  end

  write_file:write("-- GENERATED BY FastBuild\nreturn {\n")
  for _, plugin in ipairs(plugins) do
    write_file:write("  {\n")
    write_file:write('    dir = "' .. plugin.dir .. '",\n')
    write_file:write('    config = function()\n')
    write_file:write('      require("' .. plugin.dir:match("([^/]+)$"):gsub("%.nvim", "") .. '.fastbuild").setup()\n')
    write_file:write('    end,\n')
    write_file:write("  },\n")
  end
  write_file:write("}\n")
  write_file:close()

  vim.notify("FastBuild: Plugin saved.", vim.log.levels.INFO)
end

return M
